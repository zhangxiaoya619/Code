<UserControl x:Class="AuditPracticalOperation.Controls.GainExport"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controls="clr-namespace:AuditPracticalOperation.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="960" d:DesignWidth="1280">
    <UserControl.CommandBindings>
        <CommandBinding Command="controls:GainExport.CheckAll" CanExecute="CheckAllCommandCanExecute" Executed="CheckAllExecuted"/>
        <CommandBinding Command="controls:GainExport.Export" CanExecute="ExportCommandCanExecute" Executed="ExportExecuted"/>
    </UserControl.CommandBindings>
    <Border Background="#FFFFFF">
        <Grid Margin="20">
            <Grid.RowDefinitions>
                <RowDefinition Height="70"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Orientation="Horizontal" Height="30" VerticalAlignment="Center">
                <StackPanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                                            <EasingColorKeyFrame KeyTime="0" Value="#33289BDA"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                                            <EasingColorKeyFrame KeyTime="0" Value="#FF329CD7"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                                            <EasingColorKeyFrame KeyTime="0" Value="#FF289BDA"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                                                            <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Rectangle x:Name="rectangle" Stroke="#FF289BDA" RadiusX="4" RadiusY="4" Fill="#FF329CD7"/>
                                        <TextBlock x:Name="textBlock" HorizontalAlignment="Center" Style="{DynamicResource BasicTextBlock-Sketch}" Text="{TemplateBinding Content}" VerticalAlignment="Center" FontFamily="Microsoft YaHei" FontSize="14" Foreground="#FFFFFF"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
                        <Setter Property="FontSize" Value="18.667"/>
                        <Setter Property="Foreground" Value="#FF289BDA"/>
                    </Style>
                </StackPanel.Resources>
                <Button Width="100" Content="全选" Margin="0,0,30,0" Command="controls:GainExport.CheckAll"/>
                <Button Width="100" Content="导出" Command="controls:GainExport.Export"/>
            </StackPanel>
            <ListView Grid.Row="1" x:Name="practicalList" BorderBrush="{x:Null}" BorderThickness="0"   ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel/>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border x:Name="Bd" Padding="10,15,10,10">
                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <CheckBox Height="90" Width="90" Content="{Binding Name}" IsChecked="{Binding IsSelected}">
                            <CheckBox.Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type CheckBox}">
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="30"/>
                                                    </Grid.RowDefinitions>
                                                    <Rectangle Grid.RowSpan="2" x:Name="rectangle" StrokeThickness="2" RadiusX="4" RadiusY="4" Fill="#FFFFFF"/>
                                                    <Path Grid.Row="0" Width="60" Height="60" VerticalAlignment="Center" Stretch="Uniform" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" Fill="#FF546973" Data="M154.46533,137.481L154.46533,157.481 187.3549,157.481 187.3549,137.481z M154.46533,111.481L154.46533,131.481 187.3549,131.481 187.3549,111.481z M154.46533,85.481003L154.46533,105.481 187.3549,105.481 187.3549,85.481003z M67.577698,60.258995L57.577702,85.148185 49.133602,62.481582 35.577702,62.481582 49.3563,95.14814 34.023003,127.593 47.3563,127.593 57.3563,104.4811 67.3563,129.81398 82.023003,129.81398 65.133598,94.037147 80.911003,60.258995z M154.46533,59.4813L154.46533,79.4813 187.3549,79.4813 187.3549,59.4813z M154.46533,33.4813L154.46533,53.4813 187.3549,53.4813 187.3549,33.4813z M119.021,22.147997L197.68828,22.147997C199.161,22.147999,200.355,23.341999,200.355,24.814699L200.355,167.481C200.355,168.955,199.161,170.147,197.68828,170.147L119.021,170.147 119.021,157.481 148.35458,157.481 148.35458,137.481 119.021,137.481 119.021,131.481 148.35458,131.481 148.35458,111.481 119.021,111.481 119.021,105.481 148.35458,105.481 148.35458,85.481003 119.021,85.481003 119.021,79.4813 148.35458,79.4813 148.35458,59.4813 119.021,59.4813 119.021,53.4813 148.35458,53.4813 148.35458,33.4813 119.021,33.4813z M115.333,0L115.333,193.99899 0,173.99902 0,19.99996z"/>
                                                    <TextBlock Grid.Row="1" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{DynamicResource BasicTextBlock-Sketch}" Text="{TemplateBinding Content}" FontFamily="Microsoft YaHei" FontSize="{TemplateBinding FontSize}" Foreground="#000000"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Fill" TargetName="rectangle" Value="#33299BDA"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Stroke" TargetName="rectangle" Value="#FF299BDA"/>
                                                        <Setter Property="Fill" TargetName="rectangle" Value="#33299BDA"/>
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                            <Condition Property="IsChecked" Value="True"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Stroke" TargetName="rectangle" Value="#FF299BDA"/>
                                                        <Setter Property="Fill" TargetName="rectangle" Value="#33299BDA"/>
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                            <Condition Property="IsChecked" Value="False"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Fill" TargetName="rectangle" Value="#33299BDA"/>
                                                    </MultiTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="FontSize" Value="11"/>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
    </Border>
</UserControl>
