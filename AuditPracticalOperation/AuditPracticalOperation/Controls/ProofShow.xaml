<UserControl x:Class="AuditPracticalOperation.Controls.ProofShow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:convert="clr-namespace:AuditPracticalOperation.Converters"
             mc:Ignorable="d" 
             Background="#FFEDEDED"
             d:DesignHeight="400" 
             d:DesignWidth="800">
    <UserControl.Resources>
        <convert:StringToImageSourceConverter x:Key="imageConverter"/>
        <convert:LongStrToShortStrConverter x:Key="longStrConverter"/>
        <Style x:Key="ButtonStyle5" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFE5E5E5"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF838383"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle Width="48" VerticalAlignment="Top" Height="48" HorizontalAlignment="Left" Fill="#00E5E5E5"/>
                            <Path x:Name="path" Stretch="Uniform" RenderTransformOrigin="0.5,0.5" Margin="9" Fill="#FFA8A8A8" Data="M19.85228,12.08996L12.093,19.849201 24.242323,31.997846 12.094,44.145998 19.852051,51.904958 32.001186,39.756277 44.150543,51.904958 51.909,44.145994 39.760246,31.997501 51.909,19.849201 44.15049,12.08996 32.001431,24.238849z M32,0C49.671021,3.1599484E-07 64,14.329407 64,31.998501 64,49.677606 49.671021,63.997003 32,63.997003 14.328003,63.997003 0,49.677606 0,31.998501 0,14.329407 14.328003,3.1599484E-07 32,0z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle6" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image2">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle Width="60" VerticalAlignment="Top" Margin="4,0,0,0" Height="60" HorizontalAlignment="Left" Fill="#00E62323"/>
                            <Image x:Name="image" Margin="15.5,2" Source="pack://application:,,,/Images/arrowleft.png" Stretch="Fill"/>
                            <Image x:Name="image1" Margin="15.5,2" Source="pack://application:,,,/Images/arrowlefthover.png" Stretch="Fill" Visibility="Hidden"/>
                            <Image x:Name="image2" Margin="15.5,2" Source="pack://application:,,,/Images/arrowleftclick.png" Stretch="Fill" Visibility="Hidden"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle7" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image2">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle Width="60" VerticalAlignment="Top" Margin="4,0,0,0" Height="60" HorizontalAlignment="Left" Fill="#00E62323"/>
                            <Image x:Name="image" Margin="15.5,2" Source=" pack://application:,,,/Images/arrowright.png" Stretch="Fill"/>
                            <Image x:Name="image1" Margin="15.5,2" Source="pack://application:,,,/Images/arrowrighthover.png" Stretch="Fill" Visibility="Hidden"/>
                            <Image x:Name="image2" Margin="15.5,2" Source="pack://application:,,,/Images/arrowrightclick.png" Stretch="Fill" Visibility="Hidden"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True"/>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="260"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <ListView x:Name="xunhuanList" Background="Transparent" HorizontalAlignment="Center" Width="230" Margin="10,50,0,0" BorderBrush="#FFEDEDED"  ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border x:Name="Bd" Padding="0,25,0,0">
                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <RadioButton Content="{Binding Name}" Tag="{Binding}" Width="220" Height="40" IsChecked="{Binding IsChecked,Mode=TwoWay}" Checked="xunhuan_Checked"  GroupName="xunhuan">
                            <RadioButton.Style>
                                <Style TargetType="{x:Type RadioButton}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                                <Grid>
                                                    <Rectangle x:Name="rectangle" Stroke="#FF319CD8" RadiusX="4" RadiusY="4" Fill="#FFFFFF"/>
                                                    <TextBlock x:Name="textBlock" HorizontalAlignment="Center" Height="Auto" Margin="0" Style="{DynamicResource BasicTextBlock-Sketch}" Text="{TemplateBinding Content}" VerticalAlignment="Center" FontFamily="Microsoft YaHei" FontSize="14" Foreground="#FF329CD7"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Fill" TargetName="rectangle" Value="#33329CD7"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Fill" TargetName="rectangle" Value="#FF329CD7"/>
                                                        <Setter Property="Foreground" TargetName="textBlock" Value="White"/>
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                            <Condition Property="IsChecked" Value="True"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Fill" TargetName="rectangle" Value="#FF329CD7"/>
                                                        <Setter Property="Foreground" TargetName="textBlock" Value="White"/>
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                            <Condition Property="IsChecked" Value="False"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Fill" TargetName="rectangle" Value="#33329CD7"/>
                                                    </MultiTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="FontFamily" Value="Microsoft YaHei"/>
                                    <Setter Property="FontSize" Value="21.333"/>
                                    <Setter Property="Foreground" Value="#FF329CD7"/>
                                </Style>
                            </RadioButton.Style>
                        </RadioButton>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
        <Grid Grid.Column="1"  Margin="10,10,10,10">
            <Grid.RowDefinitions>
                <RowDefinition Height="45"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Margin="0,0,0,0" Orientation="Horizontal">
                <Rectangle Fill="#FF329CD7" HorizontalAlignment="Left" Height="35" VerticalAlignment="Top" Width="10" Margin="10,10,0,0"/>
                <ListView x:Name="dirList" HorizontalAlignment="Left" VerticalAlignment="Top"  Background="Transparent" Margin="10,10,0,0" BorderBrush="#FFEDEDED"  ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Border x:Name="Bd" Padding="1">
                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <RadioButton Content="{Binding Name}" Tag="{Binding}" IsChecked="True" Click="ChoiseDir_Checked" Width="auto" >
                                <RadioButton.Style>
                                    <Style TargetType="{x:Type RadioButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RadioButton}">
                                                    <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                                                        <TextBlock x:Name="textBlock" HorizontalAlignment="Left" Margin="0,0,0,0" Style="{DynamicResource BasicTextBlock-Sketch}" Text="{TemplateBinding Content}" FontFamily="Microsoft YaHei" FontSize="18.667" Foreground="Black"/>
                                                        <TextBlock x:Name="textBlock1" HorizontalAlignment="Left" Margin="10,0,0,0" Style="{DynamicResource BasicTextBlock-Sketch}" Text="&gt;"  FontFamily="Microsoft YaHei" FontSize="18.667" Foreground="Black"/>
                                                    </StackPanel>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Foreground" TargetName="textBlock" Value="#FF299BDA"/>
                                                            <Setter Property="Foreground" TargetName="textBlock1" Value="#FF299BDA"/>
                                                        </Trigger>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="Foreground" TargetName="textBlock" Value="#FF299BDA"/>
                                                            <Setter Property="Foreground" TargetName="textBlock1" Value="#FF299BDA"/>
                                                        </Trigger>
                                                        <Trigger Property="IsChecked" Value="False">
                                                            <Setter Property="Foreground" TargetName="textBlock" Value="Black"/>
                                                            <Setter Property="Foreground" TargetName="textBlock1" Value="Black"/>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                <Condition Property="IsChecked" Value="True"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Foreground" TargetName="textBlock" Value="Black"/>
                                                            <Setter Property="Foreground" TargetName="textBlock1" Value="Black"/>
                                                        </MultiTrigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                <Condition Property="IsChecked" Value="False"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Foreground" TargetName="textBlock" Value="#33299BDA"/>
                                                            <Setter Property="Foreground" TargetName="textBlock1" Value="#33299BDA"/>
                                                        </MultiTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
                                        <Setter Property="FontSize" Value="18.667"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                    </Style>
                                </RadioButton.Style>
                            </RadioButton>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </StackPanel>
            <Grid Grid.Row="1" Margin="0,10,0,10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <ListView  x:Name="proofList" Background="White"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="#FFEDEDED"  ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Border x:Name="Bd" Padding="25">
                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid Width="120" Height="160"  ToolTip="{Binding Name}" >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="120"/>
                                    <RowDefinition Height="10"/>
                                    <RowDefinition Height="30"/>
                                </Grid.RowDefinitions>
                                <Image Grid.Row="0" Source="{Binding ImgSource,Converter={StaticResource imageConverter}}" Tag="{Binding}" Stretch="Fill"  MouseLeftButtonDown="ShowImg_MouseLeftButtonDown"/>
                                <Label Grid.Row="2" HorizontalAlignment="Center" FontSize="13.33" VerticalAlignment="Center" Content="{Binding Name,Converter={StaticResource longStrConverter}}" Tag="{Binding}"/>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <Grid x:Name="GridImageShow" Background="Transparent" Visibility="Collapsed">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.25*"/>
                        <ColumnDefinition Width="0.5*"/>
                        <ColumnDefinition Width="0.25*"/>
                    </Grid.ColumnDefinitions>
                    <Rectangle Grid.Column="0" Grid.ColumnSpan="3" Fill="#7F000000" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.1*"/>
                            <RowDefinition Height="0.9*"/>
                            <RowDefinition Height="0.05*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="1">
                            <Button Content="close" Style="{DynamicResource ButtonStyle5}" Width="40" Height="40" Click="ImageShow_Click" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-27,-27,0"/>
                            <Rectangle  Fill="#FFE5E5E5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                            <StackPanel Orientation="Vertical">
                                <TextBlock HorizontalAlignment="Left" Style="{DynamicResource BasicTextBlock-Sketch}" Text="{Binding Name}" VerticalAlignment="Top" FontFamily="Microsoft YaHei" FontSize="13" Foreground="Black"/>
                                <ScrollViewer  HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Image x:Name="CurrentImage" HorizontalAlignment="Center" VerticalAlignment="Center" MouseWheel="CurrentImage_MouseWheel"
                                    MouseDown="img_MouseDown" 
                                    MouseMove="img_MouseMove"
                                    MouseUp="img_MouseUp"
                                    MouseLeave="img_MouseLeave"
                                    Stretch="Uniform"  
                                    RenderOptions.BitmapScalingMode="NearestNeighbor" >
                                        <Image.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform x:Name="sfr" ScaleX="1" ScaleY="1"/>
                                                <TranslateTransform x:Name="tlt" />
                                            </TransformGroup>
                                        </Image.RenderTransform>
                                    </Image>
                                </ScrollViewer>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
